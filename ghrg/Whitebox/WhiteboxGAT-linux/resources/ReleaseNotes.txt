Whitebox Geospatial Analysis Tools 3.3 - Glasgow


GENERAL DESCRIPTION: 

Welcome to Whitebox GAT! Whitebox is a desktop Geographical Information System 
(GIS) and remote sensing software package for advanced analysis and visualization 
of geospatial data. 

SYSTEM REQUIREMENTS:

Whitebox GAT requires a minimum of 2 GB of system memory (RAM) to operate, although 
8 GB is preferable. Depending on the size of the data being analyzed more memory 
may be required. In addition, the Java Runtime Environment (JRE) 8 or higher must 
be installed and properly configured for Whitebox GAT to operate. Whitebox will
run on any computer running the Java Runtime Environment (JRE) 8.0 or higher, 
including computers running 64-bit versions of MS Windows, MacOS, and Linux 
operating systems. A solid state drive (SSD) is recommended for those working on 
massive data files, as it greatly increased performance.

RELEASE NOTES:

Version 3.4.0 'Montreal' (January 2017)
- This is the first release of Whitebox GAT that includes some plugin tools that 
  are compiled to native code rather than running on the Java Runtime Environment.
  The plan is to develop most tools going forward using natively compiled 
  programming languages and to redevelop some of the existing tools in future
  releases. The native compiled tools in this release have been developed using
  the Rust and Go programming languages. Importantly, this change requires that 
  we now distribute versions of Whitebox that include these tools compiled 
  specifically for Windows, Mac, and Linux OSs.
- Fixed bug that falsely reported the use of 32-bit Java on 64-bit computers.
- Added an ExportGeoTIFF tool, after many requests. This tool is part of the 
  GoSpatial library. This tool currently only works on MacOS and Linux. Windows
  users need to access the 'whitebox2geotiff' tool directly from the go-spatial
  library, until this is rectified in the next release.
- Added new tools for joining (LiDAR Join), segmenting (LiDAR Segment), and 
  separating ground points within LiDAR point clouds. Each tool outputs in LAS 
  format and are native-compiled plugin tools.
- Updated and improved the algorithm used by the Remove Off-terrain Objects tool. 
  It is also now a native-complied plugin tool.
- Added the LiDAR Elevation Slice tool, which can be used to remove points from
  a LAS file that are above or below specified elevations thresholds. This is a
  native-compiled plugin tool.
- Added tools for the mathematical morphology operators Opening and Closing and
  the white top-hat transform.
- Added the Isolate Vector Features by Attribute tool.
- Fixed bug that removed line feeds when copying code snippets from help 
  documentation into the Scripter.
- Updated the RetrieveSRTMDEMData tool to optionally fix ocean elevation values
  by replacing them with nodata.
- You can now hillshade raster images by specifying a hillshade source image
  in a raster's display properties. This provides better colour saturation than
  the previous approach of overlaying the raster transparently overtop a 
  hillshade image.
- Added the Stream Slope (Continuous) tool in contrast to the Stream Link Slope
  tool.
- Updated the save map procedure to include the raster/vector cartographic 
  generalization and the scale type (Standard = 0, Simple = 1, Complex = 2).
- Numerous other bug fixes and enhancements.

Version 3.3.0 'Glasgow' (May 2016)
-Altered the 'Update Script From Code Repository' function to retrieve updates 
 from the new GitHub Whitebox repo rather than Google Code.
-Added the Quantiles tool, which transforms a raster into quantiles. Quantiles 
 are values taken at regular intervals from the inverse of the cumulative 
 distribution function (CDF) of a random variable.
-Fixed a bug in the LAS2Shapefile tool that did not allow for the output dbf file
 to be written.
-Added the Convert LAS to MultiPointZ Shapefile tool. This allows for a more
 efficient means of storing LiDAR data as a Shapefile. All LiDAR points are 
 stored in a single record in the Shapefile, with Z and intensity data stored
 in the 'z' and 'm' components of the shapefile respectively.
-Added the Unnest Basins tool to extract the entire, unnested watersheds from 
 a series of pour points and a DEM.
-Added the Stream Slope (continuous) tool, which calculates the slope of stream
 grid cells in a raster stream network.
-Added the Rasterize Streams tool.
-Added the Prune Vector Stream Network tool.
-Added the experimental Impoundment Index tool for applications involving the
 mapping of drained wetlands from LiDAR and other fine-resolution DEMs.
-Added the Roughness From Point Cloud Profiles (RPCP) tool.
-Added the Split Vector Lines tool.
-Added the Integral Image tool.
-Added discrete Sibson interpolation tools (i.e. natural neighbour) for both 
 LiDAR specific data and for point data contained in Shapefiles.
-Added the De-noise DEM tool.
-Added the Reinitialize Attribute Table tool.
-Added the Standard Deviation of Elevation tool.
-Added the Isolate Ground Points (Lindsay's Method) tool for filtering LiDAR
 point clouds.
-Added the Create Multiscale Topographic Position Image tool.
-Added the Topological Breach Burn and FillBurn stream burning tools.
-Modified tools that require calculating integral images to include a "number of
 significant decimal places" input. This allows the integral images to be 
 calculated using longs (instead of doubles) and reduces the likelihood of 
 numerical overflow errors for rasters with greater than two million grid cells.
-Numerous other bug fixes and enhancements.

Version 3.2.2 (April 12, 2015)
-LAS files can now be rendered based on the Classification, Scan Angle, and GPS Time
 in addition to Elevation and Intensity.
-Added Conditional Evaluation tool (if-then-else statement).
-Added a PickFromList tool, which outputs a raster with the value from a stack 
 of rasters based on an input position raster.
-Added LowestPosition, HighestPosition, PercentEqualTo, PercentGreaterThan, and 
 PercentLessThan tools for working with raster stacks, i.e. lists of overlapping
 raster images.
-Added a tool to create histograms based on the elevations, intensity, and 
 scan angles within a LiDAR (LAS) file. It will also output the percentiles of 
 the distribution, e.g. 95th percentile of elevation.
-Added the AddPointCoordinateToTable tool, which can be used to add the x-y 
 coordinates of points within a Point type ShapeFile as fields within its 
 attribute table.
-Added a tool to filter the points in a LiDAR (LAS) file based on a threshold 
 in the absolute scan angle.
-The Merge Points Files tool was replaced with the more general Merge Shapefiles
 tool, which works with any ShapeType.
-Added the FindLowestHighestLocations tool, which will output vector points 
 corresponding to the lowest and highest points in a raster.
-Added ExtractRasterValuesAtPoints tool for extracting the cell values of each 
 image in a raster stack corresponding to a set of vector points. Values are 
 placed within the vector attribute table.
-Added DeleteSmallLakesAndExtendRivers tool, which can be used to remove small 
 lakes (polygons) in a vector drainage network and to extend the associated river 
 network (intersecting polylines) into the interior of the lake.
-Added a Long Profile From Point tool, which can generate one or more longitudinal
 profiles for the flowpaths issuing from a set of vector points.
-Modified the Mosaic With Feathering tool to handle RGB images in addition to 
 continuous scale rasters. At the moment, this only works for the nearest-
 neighbour mode.
-Added Image Stack Profile tool to create a line graphs for a set of vector points
 through an image stack, such as multi-spectral satellite image data.
-Added a Simple Region Grow tool that will perform a very simple region grow 
 segmentation of pixels in an image stack based on a specified threshold.
-Added parallel implementations of the D8 flow pointer and accumulation algorithms.
-Fixed a bug in the Hillslopes tool.
-I've added a whole suite of tools to the Elevation Residuals toolbox for 
 performing multi-scaled topographic position analysis. This includes modified 
 tools for calculating difference and deviation from mean elevations using an 
 integral image approach that is extremely computationally efficient, even with 
 large search windows. It also includes the Local Topographic Position Scale 
 Signature and the Maximum Elevation Deviation tools. Combined with the 
 'customRGBScript.groovy' script, these functions allow for the creation of
 some spectacular multi-scale topographic position visualizations. See:
 https://whiteboxgeospatial.wordpress.com/2014/12/25/a-new-form-of-multi-scale-topographic-position-visualization/
 for examples.
 

Version 3.2.1 (September 18, 2014)
-Added the Retrieve SRTM DEM Data tool. This tool will download SRTM DEM tiles from
 the USGS FTP site, import the tiles into Whitebox GAT, and optionally fill 
 missing data holes and mosaic the tiles.
-Added the ability to natively display LAS file point clouds in the map area.
-Added Hex-binning tool.
-Added a tool for isolating ground return points from LiDAR LAS files.
-Added a tool for separating large LiDAR LAS files into smaller tiles of 
 shapefile points.
-Added a Lee filter (Sigma filter) tool.
-Added Interior Point tool.
-Added CreateRectangularGridTool for creating a vector grid of polygons based on 
 a rectangular grid.
-Added Single-part to Multi-part and Multi-part to Single-part tools.
-Added List Unique Values tool to list all of the unique values in a categorical 
 field contained within a vector's attribute table. It will also report category
 frequency.
-Added a fast depression breaching tool. Depression breaching is a far superior 
 method for pre-processing a DEM for hydrological analysis (e.g. mapping 
 watersheds). One of the reasons that people continue to fill depressions instead 
 of breaching is that filling is computationally much more efficient than 
 breaching. Well this tool is just about as fast as Whitebox's depression filling 
 tool. So now you have no excuse. This should be your default tool for hydrological
 processing of DEMs. Its result is not as good as the optimal breaching tool but
 it is far more efficient and still much better than filling. Please breach.
-Added the tool BurnStreamAtRoads, which will carve a stream path through road
 embankments at the site of road/stream crossings.
-Added a Minimum Interpolation tool for shapefile point inputs similar to the 
 Minimum Interpolation (LiDAR) tool.
-Added the ability to update individual scripts from the source code repository. 
 This way, if you modify the code for a tool and break it, you can always 
 revert it back to the source on the main trunk. There's also now a menu entry 
 that will update all scripts for which there are newer versions within the 
 code repository and new scripts.
-Added a Flood Order tool; details in tool's help.
-Added a polygonize tool for converting polylines into polygons.
-Updated the centroid (vector) tool with the option to handle multi-part polyline 
 and polygon features as a single entity or to extract centroids for each part, 
 as well as, the ability to extract centroids for groups of points.
-Created a convenience tool, Feature Selection, for opening the feature selection 
 tab within the attribute table dialog after selecting a vector layer. If the 
 layer is not currently displayed, it will be. The reason I added this tool is 
 because many people search for feature selection in the toolbox rather than 
 in the attribute table dialog.
-The Hillshade tool will now automatically calculate an appropriate z conversion 
 value when it detects that the DEM is in geographic coordinates with XY units 
 of degrees. I also fixed the Slope, Aspect, and all the Curvature tools to do 
 this as well.

Version 3.2.0 (May 4, 2014)
-Updated to Java 8. This is a major change and may result in some compatability issues.
 It will also mean that users will have to update their versions of Java to run
 Whitebox. Users will need to update their Java runtime to version 8 to run Whitebox.
 Please report any issues that you encounter as a result of this upgrade using
 Help -> Report An Error.
-Added a ClusterAttribute tool that performs k-means clustering on a selected 
 group of attributes associated with a vector file.
-Added zoom to selection for vector layers.
-Added a Clip tool for vector clipping operations. I know, why has it taken this long?
-Added floating point line thicknesses and changed the default line thickness to 0.75.
 This has greatly improved the cartographic output of Whitebox.
-Added Export Table to CSV tool.
-Added Hack Stream Ordering and Topological Stream Ordering tools.
-Added Total Length of Upstream Channels tool.
-Added Furtherest Upstream Channel Head Distance tool.
-Added the Attribute Histogram tool for create histograms based on numeric data 
 contained in a shapefile's attribute table as well as the Attribute Scattergram tool.
-Vectors can now be displayed with a palette rendered based on a boolean attribute.
-Added palette nonlinearity for vectors with a scaled palette.
-Fixed the raster-to-vector polygon conversion to include polygon holes.
-Modified the minimum bounding box tool, and all related tools (e.g. elongation ratio,
 long axis, short axis) to use an analytical solution for finding the MBB.
-Added a link to the Whitebox blog (http://whiteboxgeospatial.wordpress.com) in the help menu.
-Added the Vector Attribute Gridding tool, which can be used to interpolate the spatial 
 pattern of average values of an attribute of vector features onto a raster grid. It
 essentially can be used to answer the question, of the vector features (points, lines, 
 or polygons) within the a local neighbourhood, what is the average value of some 
 attribute? This can be quite handy for visualizing patterns.
-Added the Vector Feature Density tool, which is similar to the Vector Attribute Gridding 
 tool but works to map the spatial pattern of feature density (how many vector features 
 are within a local neighbourhood?).
-Added the ability to rotate map titles. I know this isn't a proper labelling system
 yet, but I'm working on it. Hopefully map labels will be added this summer.

Version 3.1.3 (February 23, 2014)
-Embedded vector selection by attributes into the attribute table window.
-Added MergeTableWithCSV tool for appending data contained within a comma 
 separated values (CSV) file to a shapefile's attribute table.
-Added MergeTables tool for appending one shapefile's attribute table to another
 in a one-to-one or many-to-one relation.
-Added several new functions to the attribute table such as the ability to 
 save selected features to the clipboard, filters, changing field names, etc. 
 This release sees significant improvements in the handling of attributes.
-Added scroll zooming and improved natural zooming. This is one feature that 
 once you experience it, you can never go back. I have to wonder why I didn't
 implement it earlier.
-Added the GeasyTools add-on by Marc Vis and Jan Seibert. This add-on allows 
 provides some common tools for hydrological analysis including the MDInf 
 (i.e. multiple direction D-infinity) flow accumulation algorithm.
-Added Plot Variogram tool.
-Added Stream long profile tool.
-Added Distance to Outlet tool for stream-network analysis.
-Added a tool for importing CSV files to vector points.
-Moved the log directory out of the Resources folder to a higher level. This should 
 make finding logs easier for users.
-Added check for updates and automatic downloading of latest version.
-Fixed a minor bug with the ImportArcASCIIGrid tool that offset each row by one.

Version 3.1.2 (February 5, 2014)
-Added a Profile tool for creating topographic profiles from surface rasters.
-Added a kriging interpolation tool. The kriging tool includes an interactive
 semivariogram tool.
-Added the Bare-Earth DEM tool for LiDAR data.
-Added the Canopy Model tool for LiDAR data.
-Added the ElevationAboveStream tool.
-Added the DownslopeDistanceToStream tool.
-Added the GetLasFileStatistics tool for examining LAS (LiDAR) files.
-Added the NearestNeighbourAnalysis tool for identifying clustered point patterns.
-Added the EliminateCoincidentPoints tool.
-Added the ShortAxis tool.
-Added the RunPluginInParallel tool, which can run any one plugin using a batch 
 file of input parameters in parallel.
-The ShapeFile class has a new getKdTree method that returns a kd-tree of feature
 nodes. Each kd-entry value property contains the zero-base feature ID of the node.
-The ScriptDialog class now has an addDialogButton method.
-Fixed a bug with the InterpolationIDW and RasterizeTIN tools that did not allow 
 for the use of a specified base raster for determining resolution and extent.
-Integrated a 'Field Calculator' directly into the attribute table dialog to simplify 
 the process of creating and populating new fields. At the moment the field 
 calculator only works with Groovy as a scripting engine. There appears to be 
 something wrong with the Python engine currently.


Version 3.1.1 (January 19, 2014)
-Added LongAxis tool for mapping the long axis of a polygon.
-Modified the CompareImagesForDifferences tool to include a K-S test option.
-Added MapGullyDepth tool for mapping gully features from high-res DEMs like LiDAR.
-The IDW interpolator has been significantly modified to include greater flexibility
 in interpolation of vector point data. This includes the addition of alternative
 nodal functions and weight functions.
-Added the ability to make a feature request from within Whitebox.
-Added the ability to report an error from within Whitebox.
-It is now possible to add custom menu items from a script. See the new feature
 request and report error tools as examples of custom menu items.
-Added raster increment and decrement tools.
-Added a pop-up menu to the output textbox of the Scripter.
-Updated the rsyntaxarea and autocomplete libraries to latest versions. These
 libraries are used by the Scripter and view-code window.


Version 3.1.0 (December 16, 2013)
-Added the Create TIN and Rasterize TIN tools.
-Added support for import of tiled GeoTIFF files.
-Added ShowGeoTiffTags tool for viewing the tags within a GeoTiff file.
-Modified the AddLayer method so that it accepts non-native format geospatial 
 layers and automatically calls the appropriate data import tool.
-Added an 'Export Layer' quick link to the various export data tools from 
 the Layers menu and pop-up menu.
-Added ImportSRTM tool to import shuttle radar topography mission DEMs.
-Moved all of the entries in the File menu that were related to maps to the 
 Cartographic menu and made the corresponding change to the order of the icons 
 in the toolbar. This should make it more obvious that when you first launch the 
 program, you typically need to add data layers rather open a map. Previously
 people were frequently confusing maps with data layers.
-Fixed a bug with Nearest Neighbour LiDAR interpolation.
-Modified the LiDAR IDW interpolation tool so that the maximum scan angle  
 deviation can be specified by the user.
-A raster's NoData value can now be updated directly from its layer properties.
-Added ImportSagaGrid and ExportSagaGrid tools.
-Added ImportGenericMultibandData tool to convert ENVI style BIL, BSQ and BIP 
 raster files. I was only able to get a .bsq file for testing so if you have  
 access to a small .bip and/or .bil file please forward them to me.
-Added ImportDEM tool for imported the USGS/CDED ASCII DEM files.
-Fixed a bug with the Depression Filling (Planchon and Darboux) tool that  
 affected DEMs with irregular shapes (i.e. areas of NoData around the edges).


Version 3.0.8 (November 27, 2013)
-Added the TraceDownslopeFlowpath tool.
-Fixed a bug with the FD8 and Dinf flow accumulation tools that allowed for 
 stack overflow errors if the DEM was large or contained a very long flow path.
-Fixed a bug in the generate data functionality of the data base viewer/scripter.
-Added Depth-In-Sink tool.
-Modified the Difference From Mean Elevation tool to use an integral image. This
 speeds up the performance with large neighbourhoods dramatically. In fact, it 
 will take the same time to run regardless of the size of the neighbourhood.
-Added the Multi-scale Elevation Residual Index (MERI) tool for performing 
 multi-scale landscape position analysis on a DEM.
-Modified the Hillshade tool so that it only requires two passes instead of three.
-Modified the Dissolve tool so that it can dissolve based on an attribute.
-Added CreateHexagonalVectorGrid tool.
-Added RescaleImageValueRange tool.
-Added ThickenRasterLine tool.
-Added FindStraightSegments tool.
-Other minor bug fixes, particularly related to the newly added multi-feature 
 selection.
-Improved error logging for all plug-in tools.


Version 3.0.7 (Oct. 28, 2013)
-Added preliminary support for multi-feature selection.
-Fixed error in Find Tie Points tool.
-Made the link to Whitebox tutorials in the Help accessible from the menu.
-Other minor bug fixes and version changes

Version 3.0.6 (Oct. 19, 2013)

-Added ImportWellKnownText tool.
-Fixed a bug in the RenameFile script
-Re-wrote the IDW LiDAR interpolation tool to remove an edge effect at tile 
 boundaries and to reduce a surface texturing artifact that can appear in some 
 LiDAR datasets associated with a scan angle patterning at flight-line overlaps.
-Updated Groovy to version 2.1.8
-Added Correct Vignetting tool.
-Added image de-striping tool.
-Added Find Flightline Edge Points tool.
-Added Find Tie-points tool
-Added the ability to delete recently digitized nodes.
-Fixed a bug that allowed for the outlines of polygons under other polygons to 
 show through.


Version 3.0.5 (Sept. 20, 2013)

-Added Dissolve tool.
-Added VectorCleaning tool.
-Added IntersectionDensity tool.
-Added AverageOverlay tool.
-Added ExtendVectorLine tool.
-Added Medoid tool.
-Added FindSaddlePoint tool.
-Improved the usability of the Raster Calculator.


Version 3.0.4 (Sept. 5, 2013)

-Improved support for scripting, including syntax highlighting and auto-completion.
 There have been considerable improvements made to the Whitebox scripter.
-Scripts can now be added as plugin tools, with integration in the tools panel.
-Added Rename File tool, a Python script plugin.
-Added Sink tool, a Python script plugin.
-Added user-defined weights filter, a Groovy script plugin.
-Added scripting examples in all 300+ plugin tool help files (this took quite a 
 lot of time!).
-The version of Jython (python for java) included in the library has been updated
 to the stand alone version. This has increased the distribution size by 2 MB.
-Added a quick-link to all displayed data layers in the file selection components
 of tool dialogs.

Version 3.0.3

-Added FindParallelFlow tool.
-Added RandomField tool.
-Added ImageAutocorrelation tool.
-Added mass flux tools (MassFluxD8 and MassFluxDinf).
-Added Downslope index (Hjerdt et al. 2004) tool.
-Added RGB to IHS and IHS to RGB transforms.
-Added sigmoidal contrast stretching.
-SetNoData tool has been modified to take multiple input raster files.
-Added ClipRasterToPolygon and ErasePolygonFromRaster tools.
-Added on-screen digitizing tutorial.
-Added Isobasin tool.
-Added ExportWellKnownText tool.
-Added LocatePrincipalPoint tool.
-Added Aggregate tool.
-Modified minimum bounding box tool to work with points.
-Translated plugin tool names and descriptions to German.
-Translated user interface components and messages into Russian.

Version 3.0.2

-Fixed a bug with the math tools that would not allow for a constant as the first operand.
-Added preliminary support for Catalan, Chinese (simplified and traditional), French, 
 German, Italian, Polish, and Spanish. Thank you to the numerous volunteer translators 
 (see 'About') that made this possible.
-Added ability to import RGB GeoTiffs (I know you wanted this!) and fixed a number 
 of bugs with this tool. There's still no support for compressed GeoTiffs.
-Added raster/vector conversion from geographic coordinates to UTM and vice versa.
-Added BalanceContrastEnhancement and DirectDecorrelationStretch tools.


Version 3.0.1

-Fixed a bug that affected the launch of Whitebox on 32-bit Windows computers.
-Added preliminary support for Persian and Greek languages.
-Added a feature that checks for updated version.
-Added a feature for announcements.
-Added basic error logging capabilities.
-Added trend surface analysis tools.


Version 3.0

This version is codenamed Iguazu, after Iguazu Falls located at Foz do Iguaçu, on the 
border of Brazil and Argentina. Iguazu Falls is a spectacular landform. I have decided to code-name 
each subsequent release of Whitebox after interesting places that I have traveled to as a result 
of the Whitebox project. This naming convention is in-line with the geographical nature of the 
software. 

Whitebox 3.0 has seen numerous changes and improvements since the last public release 
(v. 2.1). These are too numerous to list, but the major areas of change are related to the way 
that geographic data are displayed and the way that map elements (e.g. north arrows, legends, 
scales, titles, etc.) are handled. In previous versions of the software, there could only be one 
map area and it took up the entire view area. Whitebox now uses a page-view approach where 
the map area is just one of many possible cartographic elements, which include things like map 
areas (more than one can be displayed on a map, e.g. if you want an inset map), titles, north 
arrows, scales, legends, neatlines, text areas, and images. Data layers, including raster and 
vector files, are displayed within MapArea cartographic elements. IMPORTANTLY, THIS 
CHANGE MEANS THAT WHITEBOX MAP FILES ARE NOT COMPATIBLE WITH OLDER 
VERSIONS. Whitebox 3.0 will not open *.wmap files from previous versions. This, in addition to 
the large number of additions, is the reason for the new major version number increment. 
Cartographic elements can be treated in much the same way as objects are treated in a typical 
drawing package. For example, you can select elements, align and distribute elements, and 
group elements. The properties of elements can be readily modified by right-clicking over them 
in the data view area. The tools for navigating through the map (i.e. the page) and the map area 
(i.e. the data layers) has been greatly simplified.

Version 3.0 comes with the addition of many new tools for spatial analysis, many of which are the
 result of improved support for vector data in Whitebox. In addition, Whitebox now has more 
advanced abilities to view and edit shapefile database files (.dbf). The vector selection feature is 
now operational, allowing for the ability to query a shapefile's attributes simply by selecting the 
feature in the map area. Shapefiles may also be created through basic on-screen digitizing functionality.

Whitebox now requires Java Runtime Environment (JRE) 7.0, meaning that you will need to 
update to the most recent JRE version before you run Whitebox. If you double-click the Whitebox 
JAR file and nothing happens, it is likely because you haven't yet made this update. Visit the 
Oracle website for instructions on how to update Java.

Innumerable bug fixes have been included, along with substantial code refactoring. These are 
too numerous to list individually.


INSTALLATION:

Welcome to one of the shortest software installation processes that you have ever encountered:

1. Download the latest version of Whitebox from our website 
(http://www.uoguelph.ca/~hydrogeo/Whitebox/index.html), and unzip (decompress) the folder to a 
directory on your computer for which you have write privileges.

2. Launch Whitebox by double-clicking on the WhiteboxGIS.jar file within the Whitebox folder.  

That’s it, really! If you wish, you can unzip the Whitebox folder to an external USB drive.  Some 
users prefer this method so that the software is easily portable.  Whitebox will run perfectly well 
from an external drive, just a little more slowly.

If the program doesn't launch after double-clicking the JAR file, it is likely that you don't have the 
Java 7 Runtime Environment (JRE) installed on you computer. Visit the Oracle java page for 
instructions on how to install the JRE. 


REPORTING BUGS AND USER FEEDBACK

Any bugs or other software issues can be reported on the Whitebox issue tracker:

http://code.google.com/p/whitebox-geospatial-analysis-tools/issues/list

Any feedback from your user experience can be directed to Dr. John Lindsay (jlindsay@uoguelph.ca).


LICENSE:

Copyright (C) 2013 Dr. John Lindsay <jlindsay@uoguelph.ca>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License below more details.

Whitebox relies on the following libraries, each of which are distributed under their own licenses:

Apache Commons IO (Apache License, Version 2.0)
Apache Commons Math (Apache License, Version 2.0)
Finmath lib (Apache License version 2.0)
Groovy (Apache License, Version 2.0)
Gson (Apache License, Version 2.0)
Java Matrix Package-Jama (Released to the Public Domain)
Java Topology Suite (GNU Lesser General Public License)
JFreeChart (GNU Lesser General Public License)
JMetal (GNU Lesser General Public License)
JSyntaxPane (Apache License, Version 2.0)
Jython (Python Software Foundation License, Version 2)
RSyntaxTextArea and Autocomplete libraries (modified BSD license)

The Colt (v 1.2.0) maths library is a dependency of finmath and is distributed under 
its own license agreement as follows:
Copyright (c) 1999 CERN - European Organization for Nuclear Research.
Permission to use, copy, modify, distribute and sell this software and its 
documentation for any purpose is hereby granted without fee, provided that the 
above copyright notice appear in all copies and that both that copyright notice 
and this permission notice appear in supporting documentation. CERN makes no 
representations about the suitability of this software for any purpose. It is 
provided "as is" without expressed or implied warranty.



                    GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  "This License" refers to version 3 of the GNU General Public License.

  "Copyright" also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  "The Program" refers to any copyrightable work licensed under this
License.  Each licensee is addressed as "you".  "Licensees" and
"recipients" may be individuals or organizations.

  To "modify" a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a "modified version" of the
earlier work or a work "based on" the earlier work.

  A "covered work" means either the unmodified Program or a work based
on the Program.

  To "propagate" a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To "convey" a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays "Appropriate Legal Notices"
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The "source code" for a work means the preferred form of the work
for making modifications to it.  "Object code" means any non-source
form of a work.

  A "Standard Interface" means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The "System Libraries" of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
"Major Component", in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The "Corresponding Source" for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    "keep intact all notices".

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
"aggregate" if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A "User Product" is either (1) a "consumer product", which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, "normally used" refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  "Installation Information" for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  "Additional permissions" are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered "further
restrictions" within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An "entity transaction" is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A "contributor" is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's "contributor version".

  A contributor's "essential patent claims" are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, "control" includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a "patent license" is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To "grant" such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  "Knowingly relying" means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is "discriminatory" if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License "or any later version" applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an "about box".

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a "copyright disclaimer" for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<http://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<http://www.gnu.org/philosophy/why-not-lgpl.html>.
